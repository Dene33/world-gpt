name: Versatile PyInstaller Windows and Ubuntu Directory

on:
  release:
    types:
      - released                        # When new version of your action is released
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to use'
        required: true
        default: 'latest'


jobs:
  pyinstaller-build-windows:
    runs-on: windows-latest
    steps:
      - name: Versatile PyInstaller Windows Directory
        uses: sayyid5416/pyinstaller@v1
        with:
          python_ver: '3.10.6'
          spec: 'build_specs/win_directory.spec'
          requirements: 'requirements.txt'

      - name: Zip Windows Dist
        run: |
          cd dist
          7z a windows_dist.zip .

      - name: Create Windows Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag }}
          release_name: Release ${{ github.event.inputs.tag }}
          body: |
            Windows Release
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/windows_dist.zip
          asset_name: windows_dist.zip
          asset_content_type: application/zip

  pyinstaller-build-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: Versatile PyInstaller Ubuntu Directory
        uses: sayyid5416/pyinstaller@v1
        with:
          python_ver: '3.10.6'
          spec: 'build_specs/linux_mac_directory.spec'
          requirements: 'requirements.txt'

      - name: Zip Ubuntu Dist
        run: |
          cd dist
          zip -r ubuntu_dist.zip .

      - name: Create Ubuntu Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag }}
          release_name: Release ${{ github.event.inputs.tag }}
          body: |
            Ubuntu Release
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/ubuntu_dist.zip
          asset_name: ubuntu_dist.zip
          asset_content_type: application/zip
